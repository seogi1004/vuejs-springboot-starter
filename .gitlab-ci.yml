variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# And to cache them as well.
cache:
  key: "$CI_BUILD_REF_NAME"
  untracked: true
  paths:
    - dist/
    - src/main/resources/static/

# You specify the stages. Those are the steps that GitLab will go through 
# Order matters. 
stages:
#   - fetest
#   - betest
#   - febuild
#   - bebuild
#   - deploy
  - patch

.Job_Only:
  only:
    changes:
      - "src/**/*"
      - "package-lock.json"
      - "webpack.config.json"
      - "pom.xml"
    refs:
      - master

# FE_Test:
#   extends: .Job_Only
#   image: node:10
#   stage: fetest
#   before_script:
#     - npm install
#   script:
#     - npm test
#   coverage: /All files\s*\|\s*([\d\.]+)/

# BE_Test:
#   extends: .Job_Only
#   image: maven:3.3.9
#   stage: betest
#   script:
#     - mvn test $MAVEN_CLI_OPTS clean verify

# FE_Build:
#   extends: .Job_Only
#   image: node:10
#   stage: febuild
#   before_script:
#     - npm install
#   script:
#     - npm run dist
#     - ls -all ./src/main/resources/static

# BE_Build:
#   extends: .Job_Only
#   image: maven:3.3.9
#   stage: bebuild
#   script:
#     - mvn -DskipTests=true install $MAVEN_CLI_OPTS clean verify

# Deploy:
#   extends: .Job_Only
#   stage: deploy
#   before_script:
#     - apt-get update -qq && apt-get install -y -qq sshpass
#   script:
#     - ls -all ./dist
#     - sshpass -V
#     - export SSHPASS=$SSH_PASSWORD
#     - sshpass -e scp -P51022 -oStrictHostKeyChecking=no -r ./dist/vuejs-springboot-starter-$TAG_VERSION.jar root@61.37.50.64:/opt/public

Patch:
  extends: .Job_Only
  image: ubuntu:16.04
  stage: patch
  
  before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
  ## with your own domain name. You can copy and repeat that command if you have
  ## more than one server to connect to.
  ##
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  ##
  ## Alternatively, assuming you created the SSH_SERVER_HOSTKEYS variable
  ## previously, uncomment the following two lines instead.
  ##
  #- echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'
  #- chmod 644 ~/.ssh/known_hosts

  ##
  ## You can optionally disable host key checking. Be aware that by adding that
  ## you are suspectible to man-in-the-middle attacks.
  ## WARNING: Use this only with the Docker executor, if you use it with shell
  ## you will overwrite your user's SSH config.
  ##
  #- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  ##
  ## Optionally, if you will be using any Git commands, set the user name and
  ## email.
  ##
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"

  script:
    - git checkout $CI_COMMIT_REF_NAME
    - git tag $TAG_VERSION
    - git push -u origin $TAG_VERSION